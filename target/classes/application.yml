spring:
  datasource:
    url: jdbc:postgresql://${SPRING_DATASOURCE_URL:localhost:5433}/notification_service
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        retry:
          enabled: false
        default-requeue-rejected: false

server:
  port: 8081

rabbitmq:
  queue:
    webhook-delivery: webhook.delivery
    webhook-delivery-dlq: webhook.delivery.dlq
  exchange:
    webhook-delivery: webhook.direct
  routing-key:
    webhook-delivery: webhook.delivery
    webhook-delivery-dlq: webhook.delivery.dlq

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    com.example.webhookdispatcher: DEBUG
    org.springframework.amqp: INFO 